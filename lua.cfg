<?xml version="1.0"?>
<def format="1">
    <!-- Lua defines -->
    <define name="LUA_MINSTACK" value="20"/>
    <define name="LUA_MULTRET" value="(-1)"/>
    <define name="LUA_REGISTRYINDEX" value="(-LUAI_MAXSTACK - 1000)"/>
    <define name="LUA_ENVIRONINDEX" value="-10001">
        <warn severity="warning">Obsolete define 'LUA_ENVIRONINDEX' used.
Obsolete define 'LUA_ENVIRONINDEX' used. This define is removed in Lua 5.2 and onwards.
        </warn>
    </define>
    <define name="LUA_GLOBALSINDEX" value="-10002">
        <warn severity="warning">Obsolete define 'LUA_GLOBALSINDEX' used.
Obsolete define 'LUA_GLOBALSINDEX' used. This define is removed in Lua 5.2 and onwards. Consider using 'LUA_RIDX_GLOBALS' from the registry instead.
        </warn>
    </define>

    <define name="LUA_OK" value="0"/>
    <define name="LUA_YIELD" value="1"/>
    <define name="LUA_ERRRUN" value="2"/>
    <define name="LUA_ERRSYNTAX" value="3"/>
    <define name="LUA_ERRMEM" value="4"/>
    <define name="LUA_ERRGCMM" value="5"/>
    <define name="LUA_ERRERR" value="6"/>

    <define name="LUA_TNONE" value="(-1)"/>
    <define name="LUA_TNIL" value="0"/>
    <define name="LUA_TBOOLEAN" value="1"/>
    <define name="LUA_TLIGHTUSERDATA" value="2"/>
    <define name="LUA_TNUMBER" value="3"/>
    <define name="LUA_TSTRING" value="4"/>
    <define name="LUA_TTABLE" value="5"/>
    <define name="LUA_TFUNCTION" value="6"/>
    <define name="LUA_TUSERDATA" value="7"/>
    <define name="LUA_TTHREAD" value="8"/>
    <define name="LUA_NUMTAGS" value="9"/>

    <define name="LUA_RIDX_MAINTHREAD" value="1"/>
    <define name="LUA_RIDX_GLOBALS" value="2"/>
    <define name="LUA_RIDX_LAST" value="LUA_RIDX_GLOBALS"/>

    <define name="LUA_OPADD" value="0"/>
    <define name="LUA_OPSUB" value="1"/>
    <define name="LUA_OPMUL" value="2"/>
    <define name="LUA_OPMOD" value="3"/>
    <define name="LUA_OPPOW" value="4"/>
    <define name="LUA_OPDIV" value="5"/>
    <define name="LUA_OPIDIV" value="6"/>
    <define name="LUA_OPBAND" value="7"/>
    <define name="LUA_OPBOR" value="8"/>
    <define name="LUA_OPBXOR" value="9"/>
    <define name="LUA_OPSHL" value="10"/>
    <define name="LUA_OPSHR" value="11"/>
    <define name="LUA_OPUNM" value="12"/>
    <define name="LUA_OPBNOT" value="13"/>

    <define name="LUA_OPEQ" value="0"/>
    <define name="LUA_OPLT" value="1"/>
    <define name="LUA_OPLE" value="2"/>

    <define name="LUA_GCSTOP" value="0"/>
    <define name="LUA_GCRESTART" value="1"/>
    <define name="LUA_GCCOLLECT" value="2"/>
    <define name="LUA_GCCOUNT" value="3"/>
    <define name="LUA_GCCOUNTB" value="4"/>
    <define name="LUA_GCSTEP" value="5"/>
    <define name="LUA_GCSETPAUSE" value="6"/>
    <define name="LUA_GCSETSTEPMUL" value="7"/>
    <define name="LUA_GCISRUNNING" value="9"/>

    <define name="LUA_HOOKCALL" value="0"/>
    <define name="LUA_HOOKRET" value="1"/>
    <define name="LUA_HOOKLINE" value="2"/>
    <define name="LUA_HOOKCOUNT" value="3"/>
    <define name="LUA_HOOKTAILCALL" value="4"/>

    <define name="LUA_MASKCALL" value="(1 &lt;&lt; LUA_HOOKCALL)"/>
    <define name="LUA_MASKRET" value="(1 &lt;&lt; LUA_HOOKRET)"/>
    <define name="LUA_MASKLINE" value="(1 &lt;&lt; LUA_HOOKLINE)"/>
    <define name="LUA_MASKCOUNT" value="(1 &lt;&lt; LUA_HOOKCOUNT)"/>

    <define name="lua_call(L,n,r)" value="lua_callk(L, (n), (r), 0, NULL)"/>
    <define name="lua_cpcall(L,f,u)" value="(lua_pushcfunction(L, (f)), lua_pushlightuserdata(L,(u)), lua_pcall(L,1,0,0))">
        <warn severity="warning">Obsolete define 'lua_cpcall' used.
Obsolete define 'lua_cpcall' used. This define is removed in Lua 5.2. Consider using 'lua_pushcfunction' and calling the pushed functions with 'lua_pcall' instead.
        </warn>
    </define>
    <define name="lua_getextraspace(L)" value="((void *)((char *)(L) - LUA_EXTRASPACE))"/>
    <define name="lua_insert(L,idx)" value="lua_rotate(L, (idx), 1)"/>
    <define name="lua_isboolean(L,n)" value="(lua_type(L, (n)) == LUA_TBOOLEAN)"/>
    <define name="lua_isfunction(L,n)" value="(lua_type(L, (n)) == LUA_TFUNCTION)"/>
    <define name="lua_islightuserdata(L,n)" value="(lua_type(L, (n)) == LUA_TLIGHTUSERDATA)"/>
    <define name="lua_isnil(L,n)" value="(lua_type(L, (n)) == LUA_TNIL)"/>
    <define name="lua_isnone(L,n)" value="(lua_type(L, (n)) == LUA_TNONE)"/>
    <define name="lua_isnoneornil(L, n)" value="(lua_type(L, (n)) &lt;= 0)"/>
    <define name="lua_istable(L,n)" value="(lua_type(L, (n)) == LUA_TTABLE)"/>
    <define name="lua_isthread(L,n)" value="(lua_type(L, (n)) == LUA_TTHREAD)"/>
    <define name="lua_newtable(L)" value="lua_createtable(L, 0, 0)"/>
    <define name="lua_numbertointeger(n,p)" value="((n) &gt;= (LUA_NUMBER)(LUA_MININTEGER) &amp;&amp; (n) &lt; -(LUA_NUMBER)(LUA_MININTEGER) &amp;&amp; (*(p) = (LUA_INTEGER)(n), 1))"/>
    <define name="lua_pcall(L,n,r,f)" value="lua_pcallk(L, (n), (r), (f), 0, NULL)"/>
    <define name="lua_pop(L,n)" value="lua_settop(L, -(n)-1)"/>
    <define name="lua_pushcfunction(L,f)" value="lua_pushcclosure(L,f,0)"/>
    <define name="lua_pushglobaltable(L)" value="((void)lua_rawgeti(L, LUA_REGISTRYINDEX, LUA_RIDX_GLOBALS))"/>
    <define name="lua_pushliteral(L, s)" value="lua_pushstring(L, &quot;&quot; s)"/>
    <define name="lua_pushunsigned(L,n)" value="lua_pushinteger(L, (lua_Integer)(n))">
        <warn severity="warning">Deprecated define 'lua_pushunsigned' used.
Deprecated define 'lua_pushunsigned' used. This define is deprecated in Lua 5.3. Consider using 'lua_pushinteger' with a typecast instead.
        </warn>
    </define>
    <define name="lua_register(L,n,f)" value="(lua_pushcfunction(L, f), lua_setglobal(L, n))"/>
    <define name="lua_remove(L,idx)" value="(lua_rotate(L, (idx), -1), lua_pop(L, 1))"/>
    <define name="lua_replace(L,idx)" value="(lua_copy(L, -1, (idx)), lua_pop(L, 1))"/>
    <define name="lua_setglobal(L,s)" value="lua_setfield(L, LUA_GLOBALSINDEX, s)"/>
    <define name="lua_tointeger(L,i)" value="lua_tointegerx(L,(i),NULL)"/>
    <define name="lua_tonumber(L,i)" value="lua_tonumberx(L,(i),NULL)"/>
    <define name="lua_tostring(L,i)" value="lua_tolstring(L, (i), NULL)"/>
    <define name="lua_tounsigned(L,i) " value="lua_tounsignedx(L,(i),NULL)">
        <warn severity="warning">Deprecated define 'lua_tounsigned' used.
Deprecated define 'lua_tounsigned' used. This define is deprecated in Lua 5.3. Consider using define 'lua_tointeger' with a typecast instead.
        </warn>
    </define>
    <define name="lua_tounsignedx(L,i,is)" value="((lua_Unsigned)lua_tointegerx(L,i,is))">
        <warn severity="warning">Deprecated define 'lua_tounsignedx' used.
Deprecated define 'lua_tounsignedx' used. This define is deprecated in Lua 5.3. Consider using function 'lua_tointegerx' with a typecast instead.
        </warn>
    </define>
    <define name="lua_upvalueindex(i)" value="(LUA_REGISTRYINDEX - (i))"/>
    <define name="lua_yield(L,n)" value="lua_yieldk(L, (n), 0, NULL)"/>

    <!-- Lua auxiliary library defines -->
    <define name="LUA_ERRFILE" value="(LUA_ERRERRR+1)"/>
    <define name="LUA_FILEHANDLE" value="FILE*"/>
    <define name="LUA_GNAME" value="_G"/>
    <define name="LUA_LOADED_TABLE" value="_LOADED"/>
    <define name="LUA_PRELOAD_TABLE" value="_PRELOAD"/>
    <define name="LUAL_NUMSIZES" value="(sizeof(lua_Integer)*16 + sizeof(lua_Number))"/>
    <define name="LUA_NOREF" value="(-2)"/>
    <define name="LUA_REFNIL" value="(-1)"/>

    <define name="luaL_addchar(B,c)" value="((void)((B)-&gt;n &lt; (B)-&gt;size || luaL_prepbuffsize((B), 1)),((B)-&gt;b[(B)-&gt;n++] = (c)))"/>
    <define name="luaL_addsize(B,s)" value="((B)-&gt;n += (s))"/>
    <define name="luaL_argcheck(L, cond,arg,extramsg)" value="((void)((cond) || luaL_argerror(L, (arg), (extramsg))))"/>
    <define name="luaL_checkint(L,n)" value="((int)luaL_checkinteger(L, (n)))">
        <warn severity="warning">Deprecated define 'luaL_checkint' used.
Deprecated define 'luaL_checkint' used. This define is deprecated in Lua 5.3. Consider using 'luaL_checkinteger' with a typecast instead.
        </warn>
    </define>
    <define name="luaL_checklong(L,n)" value="((long)luaL_checkinteger(L, (n)))">
        <warn severity="warning">Deprecated define 'luaL_checklong' used.
Deprecated define 'luaL_checklong' used. This define is deprecated in Lua 5.3. Consider using 'luaL_checkinteger' with a typecast instead.
        </warn>
    </define>
    <define name="luaL_checkstring(L,n)" value="(luaL_checklstring(L, (n), NULL))"/>
    <define name="luaL_checkunsigned(L,a)" value="((lua_Unsigned)luaL_checkinteger(L,a))">
        <warn severity="warning">Deprecated define 'luaL_checkunsigned' used.
Deprecated define 'luaL_checkunsigned' used. This define is deprecated in Lua 5.3. Consider using 'luaL_checkinteger' with a typecast instead.
        </warn>
    </define>
    <define name="luaL_checkversion(L)" value="luaL_checkversion_(L, LUA_VERSION_NUM, LUAL_NUMSIZES)"/>
    <define name="luaL_dofile(L, fn)" value="(luaL_loadfile(L, fn) || lua_pcall(L, 0, LUA_MULTRET, 0))"/>
    <define name="luaL_dostring(L, s)" value="(luaL_loadstring(L, s) || lua_pcall(L, 0, LUA_MULTRET, 0))"/>
    <define name="luaL_getmetatable(L,n)" value="(lua_getfield(L, LUA_REGISTRYINDEX, (n)))"/>
    <define name="luaL_loadbuffer(L,s,sz,n)" value="luaL_loadbufferx(L,s,sz,n,NULL)"/>
    <define name="luaL_loadfile(L,f)" value="luaL_loadfilex(L,f,NULL)"/>
    <define name="luaL_newlib(L,l)" value="(luaL_checkversion(L), luaL_newlibtable(L,l), luaL_setfuncs(L,l,0))"/>
    <define name="luaL_newlibtable(L,l)" value="lua_createtable(L, 0, sizeof(l)/sizeof((l)[0]) - 1)"/>
    <define name="luaL_opt(L,f,n,d)" value="(lua_isnoneornil(L,(n)) ? (d) : f(L,(n)))"/>
    <define name="luaL_optint(L,n,d)" value="((int)luaL_optinteger(L, (n), (d)))">
        <warn severity="warning">Deprecated define 'luaL_optint' used.
Deprecated define 'luaL_optint' used. This define is deprecated in Lua 5.3. Consider using 'luaL_optinteger' with a typecast instead.
        </warn>
    </define>
    <define name="luaL_optlong(L,n,d)" value="((long)luaL_optinteger(L, (n), (d)))">
        <warn severity="warning">Deprecated define 'luaL_optlong' used.
Deprecated define 'luaL_optlong' used. This define is deprecated in Lua 5.3. Consider using 'luaL_optinteger' with a typecast instead.
        </warn>
    </define>
    <define name="luaL_optstring(L,n,d)" value="(luaL_optlstring(L, (n), (d), NULL))"/>
    <define name="luaL_optunsigned(L,a,d)" value="((lua_Unsigned)luaL_optinteger(L,a,(lua_Integer)(d)))">
        <warn severity="warning">Deprecated define 'luaL_optunsigned' used.
Deprecated define 'luaL_optunsigned' used. This define is deprecated in Lua 5.3. Consider using 'luaL_optinteger' with a typecast instead.
        </warn>
    </define>
    <define name="luaL_prepbuffer(B)" value="luaL_prepbuffsize(B, LUAL_BUFFERSIZE)"/>
    <define name="luaL_register(L,n,l)" value="(luaL_openlib(L,(n),(l),0))">
        <warn severity="warning">Deprecated define 'luaL_register' used.
Deprecated define 'luaL_register' used. This define is deprecated in Lua 5.2.

Instead, use 'luaL_setfuncs' so that your module does not create globals. (Modules are not expected to set global variables anymore.)
        </warn>
    </define>
    <define name="luaL_typename(L,i)" value="lua_typename(L, lua_type(L,(i)))"/>

    <!-- Lua types -->
    <podtype name="lua_Alloc"/>
    <podtype name="lua_CFunction"/>
    <podtype name="lua_Debug"/>
    <podtype name="lua_Hook"/>
    <podtype name="lua_Integer"/>
    <podtype name="lua_KContext"/>
    <podtype name="lua_KFunction"/>
    <podtype name="lua_Number"/>
    <podtype name="lua_Reader"/>
    <podtype name="lua_State"/>
    <podtype name="lua_Unsigned"/>
    <podtype name="lua_Writer"/>

    <!-- Lua auxiliary library types -->
    <podtype name="luaL_Buffer"/>
    <podtype name="luaL_Reg"/>
    <podtype name="luaL_Stream"/>

    <!-- Lua functions -->
    <memory>
        <alloc init="true">lua_newstate</alloc>
        <alloc init="true">luaL_newstate</alloc>
        <alloc init="true">lua_open</alloc>
        <dealloc>lua_close</dealloc>
    </memory>

    <function name="lua_absindex">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_arith">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_atpanic">
        <leak-ignore/>
        <returnValue type="lua_CFunction"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/></arg>
    </function>
    <function name="lua_callk">
        <leak-ignore/>
        <noreturn>false</noreturn>
        <returnValue type="void"/>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
        <arg nr="4"><not-bool/><not-uninit/></arg>
        <arg nr="5"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_checkstack">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_close">
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
    </function>
    <function name="lua_compare">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
        <arg nr="4"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_concat">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_copy">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_createtable">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_dump">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/></arg>
        <arg nr="3"><not-bool/></arg>
        <arg nr="4"><not-uninit/></arg>
    </function>
    <function name="lua_equal">
        <warn severity="warning">Obsolete function 'lua_equal' used.
Obsolete function 'lua_equal' used. This function is removed in Lua 5.2 and onwards. Consider using 'lua_compare' instead.
        </warn>
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_error">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>true</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
    </function>
    <function name="lua_gc">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_getallocf">
        <leak-ignore/>
        <returnValue type="lua_Alloc"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_getctx">
        <warn severity="warning">Obsolete function 'lua_getctx' used.
Obsolete function 'lua_getctx' used. This function is removed in Lua 5.3.

Continuation functions now receive as parameters what they needed to get through lua_getctx, so lua_getctx has been removed.
        </warn>
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/></arg>
    </function>
    <function name="lua_getfield">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="lua_getglobal">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="lua_geti">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_getmetatable">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_gettable">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_gettop">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
    </function>
    <function name="lua_getuservalue">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_isyieldable">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
    </function>
    <function name="lua_len">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_lessthan">
        <warn severity="warning">Obsolete function 'lua_lessthan' used.
Obsolete function 'lua_lessthan' used. This function is removed in Lua 5.2 and onwards. Consider using 'lua_compare' instead.
        </warn>
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_load">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="3"><not-bool/></arg>
        <arg nr="4"><not-bool/><not-null/><not-uninit/><strz/></arg>
        <arg nr="5"><not-bool/><not-uninit/><strz/></arg>
    </function>
    <function name="lua_newstate">
        <use-retval/>
        <returnValue type="lua_State*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/></arg>
    </function>
    <function name="lua_newthread">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="lua_State*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
    </function>
    <function name="lua_newuserdata">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="void*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/><valid>0:</valid></arg>
    </function>
    <function name="lua_next">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_objlen">
        <warn severity="warning">Obsolete function 'lua_objlen' used.
Obsolete function 'lua_objlen' used. This function is renamed to 'lua_rawlen' in Lua 5.2 and onwards.
        </warn>
        <leak-ignore/>
        <use-retval/>
        <returnValue type="size_t"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_open">
        <warn severity="warning">Obsolete function 'lua_open' used.
Obsolete function 'lua_open' used. This function is replaced in Lua 5.1 by 'lua_newstate' to allow the user to set a memory-allocation function. You can use 'luaL_newstate' from the standard library to create a state with a standard allocation function (based on realloc).
        </warn>
        <use-retval/>
        <returnValue type="lua_State*"/>
        <noreturn>false</noreturn>
    </function>
    <function name="lua_pcallk">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
        <arg nr="4"><not-bool/><not-uninit/></arg>
        <arg nr="5"><not-bool/><not-uninit/></arg>
        <arg nr="6"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_pushboolean">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-uninit/><valid>0:1</valid></arg>
    </function>
    <function name="lua_pushcclosure">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="3"><not-bool/><valid>0:255</valid></arg>
    </function>
    <function name="lua_pushfstring">
        <leak-ignore/>
        <formatstr type="printf"/>
        <returnValue type="const char*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><formatstr/><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="lua_pushinteger">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_pushliteral">
        <leak-ignore/>
        <returnValue type="const char*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="lua_pushlstring">
        <leak-ignore/>
        <returnValue type="const char*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/><minsize type="argvalue" arg="2"/></arg>
    </function>
    <function name="lua_pushnil">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
    </function>
    <function name="lua_pushnumber">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_pushstring">
        <leak-ignore/>
        <returnValue type="const char*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="lua_pushthread">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
    </function>
    <function name="lua_pushvalue">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_pushvfstring">
        <leak-ignore/>
        <formatstr type="printf"/>
        <returnValue type="const char*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><formatstr/><not-bool/><not-null/><not-uninit/><strz/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_rawequal">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_rawget">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_rawgeti">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_rawgetp">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_rawlen">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="size_t"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_rawset">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_rawseti">
        <leak-ignore/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/></arg>
        <arg nr="3"></arg>
    </function>
    <function name="lua_rawsetp">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_resume">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_rotate">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_setallocf">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="3"><not-bool/></arg>
    </function>
    <function name="lua_setfenv">
        <warn severity="warning">Obsolete function 'lua_setfenv' used.
Obsolete function 'lua_setfenv' used. This function is removed in Lua 5.2 and onwards.
        </warn>
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_setfield">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="lua_seti">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_setmetatable">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_settable">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_settop">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_setuservalue">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_status">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
    </function>
    <function name="lua_stringtonumber">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="size_t"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="lua_toboolean">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_tocfunction">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="lua_CFunction"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_tointegerx">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="lua_Integer"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_tolstring">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="const char*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/></arg>
    </function>
    <function name="lua_tonumberx">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="lua_Number"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/></arg>
    </function>
    <function name="lua_topointer">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="const void*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_tostring">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="const char*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_tothread">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="lua_State*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_touserdata">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="void*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_type">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_typename">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="const char*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_version">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="const lua_Number*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_xmove">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="lua_yieldk">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
        <arg nr="4"><not-bool/><not-uninit/></arg>
    </function>

    <!-- Auxiliary library -->
    <function name="luaL_addlstring">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/><valid>0:</valid></arg>
    </function>
    <function name="luaL_addstring">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="luaL_addvalue">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
    </function>
    <function name="luaL_argerror">
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>true</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="luaL_buffinit">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/></arg>
    </function>
    <function name="luaL_buffinitsize">
        <use-retval/>
        <returnValue type="char*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/></arg>
        <arg nr="3"><not-bool/><not-uninit/><valid>0:</valid></arg>
    </function>
    <function name="luaL_callmeta">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="luaL_checkany">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>true</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="luaL_checklstring">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="const char*"/>
        <noreturn>true</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/></arg>
    </function>
    <function name="luaL_checknumber">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="lua_Number"/>
        <noreturn>true</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="luaL_checkoption">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>true</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-null/><not-uninit/><strz/></arg>
        <arg nr="4"><not-bool/><not-null/><not-uninit/></arg>
    </function>
    <function name="luaL_checkstack">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>true</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-bool/></arg>
        <arg nr="3"><not-bool/><not-uninit/><strz/></arg>
    </function>
    <function name="luaL_checktype">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>true</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="luaL_checkudata">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="void*"/>
        <noreturn>true</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="luaL_checkversion_">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>true</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/><valid>0:</valid></arg>
    </function>
    <function name="luaL_error">
        <formatstr/>
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>true</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><formatstr/><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="luaL_execresult">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="luaL_fileresult">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="luaL_getmetafield">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="luaL_getn">
        <warn severity="warning">Obsolete function 'luaL_getn' used.
Obsolete function 'luaL_getn' used. This function is deprecated in Lua 5.1 and removed in Lua 5.2.

It's recommended to replace this function with 'lua_rawlen' instead.
        </warn>
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="luaL_getsubtable">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-null/><not-uninit/></arg>
    </function>
    <function name="luaL_gsub">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="const char*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/><strz/></arg>
        <arg nr="3"><not-bool/><not-null/><not-uninit/><strz/></arg>
        <arg nr="4"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="luaL_len">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="lua_Integer"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="luaL_loadbufferx">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/><minsize type="argvalue" arg="3"/></arg>
        <arg nr="3"><not-bool/><not-uninit/><valid>0:</valid></arg>
        <arg nr="4"><not-bool/><not-null/><not-uninit/><strz/></arg>
        <arg nr="5"><not-bool/><not-uninit/><strz/></arg>
    </function>
    <function name="luaL_loadfilex">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/><strz/></arg>
        <arg nr="3"><not-bool/><not-uninit/><strz/></arg>
    </function>
    <function name="luaL_loadstring">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="luaL_newmetatable">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="luaL_newstate">
        <use-retval/>
        <returnValue type="lua_State*"/>
        <noreturn>false</noreturn>
    </function>
    <function name="luaL_openlib">
        <warn severity="warning">Obsolete function 'luaL_openlib' used.
Obsolete function 'luaL_openlib' used. This function is removed in Lua 5.1.

Instead, use 'luaL_setfuncs' so that your module does not create globals. (Modules are not expected to set global variables anymore.)
        </warn>
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/><strz/></arg>
        <arg nr="3"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="4"><not-bool/><not-uninit/></arg>
    </function>
    <function name="luaL_openlibs">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
    </function>
    <function name="luaL_optlstring">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="const char*"/>
        <noreturn>true</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="4"><not-bool/></arg>
    </function>
    <function name="luaL_optnumber">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="lua_Number"/>
        <noreturn>true</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="luaL_prepbuffsize">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="char*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/><valid>0:</valid></arg>
    </function>
    <function name="luaL_pushresult">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
    </function>
    <function name="luaL_pushresultsize">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="luaL_ref">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="int"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
    <function name="luaL_requiref">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/><strz/></arg>
        <arg nr="3"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="4"><not-uninit/></arg>
    </function>
    <function name="luaL_setfuncs">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="luaL_setmetatable">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="luaL_setn">
        <warn severity="warning">Obsolete function 'luaL_setn' used.
Obsolete function 'luaL_setn' used. This function is deprecated in Lua 5.1 and removed in Lua 5.2. It's advised to simply remove uses of this function.
        </warn>
        <leak-ignore/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="luaL_testudata">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="void*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="luaL_tolstring">
        <leak-ignore/>
        <use-retval/>
        <returnValue type="const char*"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/></arg>
    </function>
    <function name="luaL_traceback">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/><strz/></arg>
        <arg nr="4"><not-bool/><not-uninit/></arg>
    </function>
    <function name="luaL_typerror">
        <warn severity="warning">Obsolete function 'luaL_typerror' used.
Obsolete function 'luaL_typerror' used. This function is removed in Lua 5.2 and onwards.
        </warn>
        <leak-ignore/>
        <returnValue type="int"/>
        <noreturn>true</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-null/><not-uninit/><strz/></arg>
    </function>
    <function name="luaL_unref">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
        <arg nr="3"><not-bool/><not-uninit/></arg>
    </function>
    <function name="luaL_where">
        <leak-ignore/>
        <returnValue type="void"/>
        <noreturn>false</noreturn>
        <arg nr="1"><not-bool/><not-null/><not-uninit/></arg>
        <arg nr="2"><not-bool/><not-uninit/></arg>
    </function>
</def>
